[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
    let g:dein#enable_notification = 1
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
    let g:python3_host_prog = "/usr/local/bin/python3"
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#auto_complete_delay = 0
    let g:deoplete#auto_complete_start_length = 1
    let g:deoplete#enable_refresh_always = 0
    " <C-h>, <BS>: close popup and delete backword char.
    inoremap <expr><C-h> deoplete#smart_close_popup()."\<C-h>"
    inoremap <expr><BS>  deoplete#smart_close_popup()."\<C-h>"
    " TABでの補完
    inoremap <silent><expr> <TAB>
    \ pumvisible() ? "\<C-n>" :
    \ <SID>check_back_space() ? "\<TAB>" :
    \ deoplete#mappings#manual_complete()
    function! s:check_back_space() abort "{{{
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~ '\s'
    endfunction"}}}

    " preview(ウィンドウ分割されて表示されるやつ)を無効化
    set completeopt-=preview
'''
depends = ['neosnippet.vim', 'neosnippet-snippets']

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = ['deoplete.nvim']

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'

[[plugins]]
repo = 'majutsushi/tagbar'


[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    function! ALEStatus()
      return ALEGetStatusLine()
    endfunction
    let g:ale_linters = {
    \   'python': ['flake8'],
    \}
    let g:ale_sign_column_always = 1
    let g:ale_sign_error = "!!"
    let g:ale_sign_warning = ">>"
    let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '○ OK']
    highlight clear ALEErrorSign
    highlight clear ALEWarningSign
'''

[[plugins]]
repo = 'mattn/sonictemplate-vim'
hook_add = '''
    let g:sonictemplate_vim_template_dir = '$HOME/git/dotfiles/vim/template'
'''

[[plugins]]
repo = 'aklt/plantuml-syntax'
hook_add = '''
    let g:plantuml_executable_script = '$HOME/.plantuml'
'''

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'kannokanno/previm'
hook_add = '''
    augroup PrevimSettings
        autocmd!
        autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
    augroup END
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    autocmd StdinReadPre * let s:std_in=1
    autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
    map <C-n> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
	function! FilePath()
		if winwidth(0) > 90
			return expand("%:s")
		else
			return expand("%:t")
		endif
	endfunction
    let g:lightline = {
        \   'component_function': {
        \      'ale': 'ALEStatus',
        \      'filepath': 'FilePath',
        \      'gitbranch': 'fugitive#head'
        \   },
        \   'colorscheme': 'wombat'}
        " \   'colorscheme': 'powerline'}
    " TODO 適宜直す
    let g:lightline.mode_map = {
        \ 'n' : 'NORMAL',
        \ 'i' : 'INSERT',
        \ 'R' : 'REPLACE',
        \ 'v' : 'VISUAL',
        \ 'V' : 'V-LINE',
        \ "\<C-v>": 'V-BLOCK',
        \ 'c' : 'COMMAND',
        \ 's' : 'SELECT',
        \ 'S' : 'S-LINE',
        \ "\<C-s>": 'S-BLOCK',
        \ 't': 'TERMINAL',
        \ }
    let g:lightline.active = {
        \ 'left': [['mode', 'paste'],
        \          ['readonly', 'filepath', 'modified', 'gitbranch']],
        \ 'right': [['percent', 'lineinfo'],
        \           ['ale'],
        \           ['fileformat', 'fileencoding', 'filetype']]}
    let g:lightline.inactive = {
        \ 'left': [['filepath', 'modified', 'gitbranch']],
        \ 'right': [['percent', 'lineinfo'],
        \           ['ale']]}
    let g:lightline.tabline = {
        \ 'left': [['tabs']],
        \ 'right': [['close']]}
    let g:lightline.component_type = {
        \ 'tabs': 'tabsel',
        \ 'close': 'raw' }
'''

[[plugins]]
repo = 'qpkorr/vim-bufkill'

[[plugins]]
repo = 'tpope/vim-fugitive'

# ----- colorscheme ----- #
[[plugins]]
repo = 'freeo/vim-kalisi'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'lifepillar/vim-solarized8'

[[plugins]]
repo = 'kristijanhusak/vim-hybrid-material'
hook_add = '''
    autocmd MyAutoCmd VimEnter * nested colorscheme hybrid_reverse
'''
